name: Ubuntu build (backbone only)
# -------------------------------------------------
# no GUI no benchmarking
# -------------------------------------------------

on:
  push:
    tags:        
      - '*'  
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'  
      - '.github/workflows/windows-build.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/windows-build.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MAKEFLAGS: -j4
  BUILD_TYPE: Release
  BDB_PREFIX: /usr/local

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
      with:
         fetch-depth: 1

    - name: Create BDB bootstrap folder
      run: mkdir ${{github.workspace}}/bootstrap

    - name: Check cache Berkley DB
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/bootstrap
        key: ${{runner.os}}-bdb-5.1.29-v1


# Full list of dependencies:
#            git wget build-essential libtool autotools-dev automake libssl-dev libevent-dev bsdmainutils pkg-config 
#            libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev 
#            libboost-test-dev libboost-thread-dev
    - name: Install packages Ubuntu
      run: |
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq libevent-dev libboost-system-dev \
             libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev \
             libboost-thread-dev
    
    - name: (Build and) install Berkley DB
      run: |
        cd ${{github.workspace}}/bootstrap
        if [[ -e "db-5.1.29.NC" ]]; then 
          cd db-5.1.29.NC/build_unix 
        else
          wget http://download.oracle.com/berkeley-db/db-5.1.29.NC.tar.gz
          tar xvfz db-5.1.29.NC.tar.gz && cd db-5.1.29.NC
          sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' src/dbinc/atomic.h
          cd build_unix
          ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${{env.BDB_PREFIX}} 
          make -j4
        fi
        sudo make install
    
    - name: Build CoinGreen
      run: |
        cd ${{github.workspace}}
        ./autogen.sh
        ./configure --disable-bench
        make -j4

    - name: Pre-release
      run: |
        strip ${{github.workspace}}/src/coingreend
        strip ${{github.workspace}}/src/coingreen-cli
        strip ${{github.workspace}}/src/coingreen-tx
        cp ${{github.workspace}}/src/coingreend ${{github.workspace}}/deploy/ubuntu/
        cp ${{github.workspace}}/src/coingreen-cli ${{github.workspace}}/deploy/ubuntu/
        cp ${{github.workspace}}/src/coingreen-tx ${{github.workspace}}/deploy/ubuntu/
        cp ${{github.workspace}}/contrib/init/coingreen.service ${{github.workspace}}/deploy/ubuntu/service
        cd ${{github.workspace}}/deploy/ubuntu
        chmod +x start.sh
        zip -r ${{github.workspace}}/ubuntu-binaries.zip ./**

    - name: Run tests
      run: |
        cd ${{github.workspace}}
        make check

#    - uses: actions/upload-artifact@v2
#      if: "!startsWith(github.ref, 'refs/tags/')"
#      with:
#         name: ubuntu-binaries
#         path: ${{github.workspace}}/deploy/ubuntu

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/ubuntu-binaries.zip
